<!--***********************************************************************************

   Toolkit for WPF

   Copyright (C) 2007-2022 Xceed Software Inc.

   This program is provided to you under the terms of the XCEED SOFTWARE, INC.
   COMMUNITY LICENSE AGREEMENT (for non-commercial use) as published at 
   https://github.com/xceedsoftware/wpftoolkit/blob/master/license.md 

   For more features, controls, and fast professional support,
   pick up the Plus Edition at https://xceed.com/xceed-toolkit-plus-for-wpf/

   Stay informed: follow @datagrid on Twitter or Like http://facebook.com/datagrids

  **********************************************************************************-->

<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="http://schemas.xceed.com/wpf/xaml/toolkit"
                    xmlns:conv="http://schemas.xceed.com/wpf/xaml/toolkit"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:chrome="http://schemas.xceed.com/wpf/xaml/toolkit"
                    xmlns:dance="clr-namespace:Dance.Wpf">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source=".\Common.xaml" />
        <ResourceDictionary Source=".\Glyphs.xaml" />
        <ResourceDictionary Source=".\ColorCanvas.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!-- =============================================================================== -->
    <!-- ColorPicker                                                                     -->
    <!-- =============================================================================== -->

    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <conv:InverseBoolConverter x:Key="InverseBoolConverter" />
    <conv:ColorToSolidColorBrushConverter x:Key="ColorToSolidColorBrushConverter" />
    <conv:AdditionConverter x:Key="AdditionConverter" />

    <dance:DanceMappingConverter x:Key="ColorModeToTabItemSelectedConverter">
        <!-- ColorCanvas ===> 0 -->
        <dance:DanceMappingConverterItem>
            <dance:DanceMappingConverterItem.From>
                <local:ColorMode>ColorCanvas</local:ColorMode>
            </dance:DanceMappingConverterItem.From>
            <dance:DanceMappingConverterItem.To>
                <sys:Int32>0</sys:Int32>
            </dance:DanceMappingConverterItem.To>
        </dance:DanceMappingConverterItem>
        <dance:DanceMappingConverter.DefaultConvertValue>
            <sys:Int32>1</sys:Int32>
        </dance:DanceMappingConverter.DefaultConvertValue>
        <dance:DanceMappingConverter.DefaultConvertBackValue>
            <local:ColorMode>ColorPalette</local:ColorMode>
        </dance:DanceMappingConverter.DefaultConvertBackValue>
    </dance:DanceMappingConverter>

    <LinearGradientBrush x:Key="ColorPickerDarkBorderBrush"
                         EndPoint="0.5,1"
                         StartPoint="0.5,0">
        <GradientStop Color="#FFA3AEB9" Offset="0" />
        <GradientStop Color="#FF8399A9" Offset="0.375" />
        <GradientStop Color="#FF718597" Offset="0.375" />
        <GradientStop Color="#FF617584" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="PopupBackgroundBrush"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0" Color="#FFffffff" />
                <GradientStop Offset="1" Color="#FFE8EBED" />
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <!-- 颜色项 -->
    <Style x:Key="ColorItemContainerStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="ToolTip" Value="{Binding Name}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid x:Name="mainGrid" ToolTip="{Binding Name}">
                        <Grid.Resources>
                            <Style TargetType="ToolTip">
                                <Style.Triggers>
                                    <Trigger Property="Content" Value="{x:Static sys:String.Empty}">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Resources>
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        <Border BorderThickness="1"
                                Background="Transparent"
                                BorderBrush="Transparent"
                                x:Name="_outerBorder"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch">
                            <Border Background="Transparent"
                                    BorderThickness="1"
                                    BorderBrush="Transparent"
                                    x:Name="_innerBorder"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="_outerBorder" Property="BorderBrush" Value="#FFFF0000" />
                            <Setter TargetName="_innerBorder" Property="BorderBrush" Value="#FFFFFF00" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="_outerBorder" Property="BorderBrush" Value="#FFFF0000" />
                            <Setter TargetName="_innerBorder" Property="BorderBrush" Value="#FFFFFF00" />
                        </Trigger>
                        <DataTrigger Binding="{Binding DisplayColorTooltip, RelativeSource={RelativeSource AncestorType={x:Type local:ColorPicker}}}"
                                     Value="False">
                            <Setter Property="ToolTip" Value="{x:Static sys:String.Empty}" TargetName="mainGrid" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- 颜色项模板 -->
    <DataTemplate x:Key="ColorItemTemplate">
        <Grid>
            <Border Background="{StaticResource CheckerBrush}"
                    BorderBrush="Black"
                    BorderThickness="1"
                    Margin="2,2,2,2">
                <Rectangle Width="14" Height="14">
                    <Rectangle.Style>
                        <Style TargetType="Rectangle">
                            <Setter Property="Fill" Value="{Binding Color, Converter={StaticResource ColorToSolidColorBrushConverter}}" />
                        </Style>
                    </Rectangle.Style>
                </Rectangle>
            </Border>
        </Grid>
    </DataTemplate>

    <!-- 下拉按钮样式 -->
    <Style x:Key="ColorPickerToggleButtonStyle" TargetType="ToggleButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="True">
                        <Grid UseLayoutRounding="True" SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <ContentPresenter Content="{TemplateBinding Content}"
                                              Margin="{TemplateBinding Padding}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />

                            <Border Grid.Column="1" Width="20"
                                    Visibility="{Binding ShowDropDownButton, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:ColorPicker}, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <Path Width="9"
                                      Height="5"
                                      Data="{StaticResource DownArrowGeometry}"
                                      Fill="#BABABA"
                                      VerticalAlignment="Center" HorizontalAlignment="Center" />
                            </Border>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- 颜色显示样式 -->
    <Style x:Key="ColorDisplayStyle" TargetType="ContentControl">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border Background="{StaticResource CheckerBrush}">
                        <Rectangle Fill="{Binding SelectedColor, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:ColorPicker}, Converter={StaticResource ColorToSolidColorBrushConverter}}" />
                    </Border>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding SelectedColor, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:ColorPicker}}"
                         Value="{x:Null}">
                <Setter Property="Visibility"
                        Value="Collapsed" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- 颜色列表 -->
    <Style x:Key="ColorListStyle" TargetType="ListBox">
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="MaxHeight"
                Value="275" />
        <!-- ConverterParameter is margin/Padding from Popup-->
        <Setter Property="Width"
                Value="{Binding MaxDropDownWidth, RelativeSource={RelativeSource AncestorType={x:Type local:ColorPicker}}, Converter={StaticResource AdditionConverter}, ConverterParameter=-18}" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel Width="{Binding ActualWidth, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBox}, Converter={StaticResource AdditionConverter}, ConverterParameter=-4}" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle"
                Value="{StaticResource ColorItemContainerStyle}" />
        <Setter Property="ItemTemplate"
                Value="{StaticResource ColorItemTemplate}" />
        <Setter Property="SelectionMode"
                Value="Single" />
    </Style>

    <!-- 颜色选择器 -->
    <Style TargetType="{x:Type local:ColorPicker}">
        <Setter Property="Background" Value="{DynamicResource ResourceKey={x:Static Member=dance:DanceResourceKey.BACKGROUND_BRUSH}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ResourceKey={x:Static Member=dance:DanceResourceKey.BORDER_BRUSH}}" />
        <Setter Property="BorderThickness" Value="{DynamicResource ResourceKey={x:Static Member=dance:DanceResourceKey.BORDER_THICKNESS}}" />
        <Setter Property="ButtonStyle" Value="{StaticResource ColorPickerToggleButtonStyle}" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Height" Value="{DynamicResource ResourceKey={x:Static Member=dance:DanceResourceKey.EDIT_HEIGHT_SMALL}}"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="MaxDropDownWidth" Value="250" />
        <Setter Property="StandardTabHeader" Value="标准"></Setter>
        <Setter Property="StandardColorsHeader" Value="常用颜色"></Setter>
        <Setter Property="AvailableColorsHeader" Value="标准颜色"></Setter>
        <Setter Property="AdvancedTabHeader" Value="调色"></Setter>
        <Setter Property="ColorMode" Value="ColorCanvas"></Setter>
        <Setter Property="HeaderBackground" Value="{DynamicResource ResourceKey={x:Static Member=dance:DanceResourceKey.CHUNK_BAR_BACKGROUND}}" />
        <Setter Property="DropDownBackground" Value="{DynamicResource ResourceKey={x:Static Member=dance:DanceResourceKey.BACKGROUND_BRUSH}}"></Setter>
        <Setter Property="DropDownBorderBrush" Value="{DynamicResource ResourceKey={x:Static Member=dance:DanceResourceKey.BORDER_BRUSH}}" />
        <Setter Property="DropDownBorderThickness" Value="{DynamicResource ResourceKey={x:Static Member=dance:DanceResourceKey.BORDER_THICKNESS}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ColorPicker}">
                    <Grid Background="Transparent">
                        <ToggleButton x:Name="PART_ColorPickerToggleButton"
                                      IsTabStop="True"
                                      MinHeight="22"
                                      Background="{TemplateBinding Background}"
                                      BorderBrush="{TemplateBinding BorderBrush}"
                                      BorderThickness="{TemplateBinding BorderThickness}"
                                      VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                      HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      Padding="{TemplateBinding Padding}"
                                      IsChecked="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                      IsHitTestVisible="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InverseBoolConverter}}"
                                      Style="{TemplateBinding ButtonStyle}">
                            <Grid Margin="2">
                                <ContentControl x:Name="ColorOnly" Style="{StaticResource ColorDisplayStyle}" />
                                <Border x:Name="ColorAndName"
                                        Background="Transparent"
                                        Visibility="Hidden">
                                    <StackPanel Orientation="Horizontal">
                                        <ContentControl HorizontalAlignment="Left"
                                                        Width="20"
                                                        Margin="2,1,4,1"
                                                        Style="{StaticResource ColorDisplayStyle}"
                                                        BorderThickness="1"
                                                        BorderBrush="#FFC9CACA" />
                                        <TextBlock Text="{Binding SelectedColorText, RelativeSource={RelativeSource TemplatedParent}}"
                                                   VerticalAlignment="Center" >
                                        </TextBlock>
                                    </StackPanel>
                                </Border>
                            </Grid>
                        </ToggleButton>

                        <Popup x:Name="PART_ColorPickerPalettePopup"
                               VerticalAlignment="Bottom"
                               IsOpen="{Binding ElementName=PART_ColorPickerToggleButton, Path=IsChecked}"
                               StaysOpen="False"
                               AllowsTransparency="True"
                               Focusable="False"
                               HorizontalOffset="0"
                               VerticalOffset="2"
                               PopupAnimation="Fade"
                               Width="{TemplateBinding MaxDropDownWidth}">
                            <Border BorderThickness="{TemplateBinding DropDownBorderThickness}"
                                    Background="{TemplateBinding DropDownBackground}"
                                    BorderBrush="{TemplateBinding DropDownBorderBrush}"
                                    Padding="3">
                                <TabControl x:Name="ColorPickerTabControl"
                                            Background="Transparent"
                                            dance:DanceShuttleOption.UnitLength="60"
                                            SelectedIndex="{Binding ColorMode, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ColorModeToTabItemSelectedConverter}}">

                                    <TabItem x:Name="AdvancedTabItem"
                                             Width="60"
                                             Height="{DynamicResource ResourceKey={x:Static Member=dance:DanceResourceKey.EDIT_HEIGHT_SMALL}}"
                                             Header="{Binding AdvancedTabHeader, RelativeSource={RelativeSource TemplatedParent}}"
                                             Foreground="{TemplateBinding TabForeground}">
                                        <!-- ColorCanvas -->
                                        <!-- ConverterParameter is margin/Padding from Popup-->
                                        <Grid x:Name="_colorCanvasHost"
                                              Width="{Binding MaxDropDownWidth, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource AdditionConverter}, ConverterParameter=-18}">
                                            <ScrollViewer HorizontalScrollBarVisibility="Auto"
                                                          VerticalScrollBarVisibility="Hidden">
                                                <local:ColorCanvas Background="Transparent"
                                                                   BorderThickness="0"
                                                                   Foreground="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}"
                                                                   UsingAlphaChannel="{Binding UsingAlphaChannel, RelativeSource={RelativeSource TemplatedParent}}"
                                                                   SelectedColor="{Binding SelectedColor, RelativeSource={RelativeSource TemplatedParent}}" />
                                            </ScrollViewer>
                                        </Grid>
                                    </TabItem>
                                    <TabItem x:Name="StandardTabItem"
                                             Width="60" 
                                             Height="{DynamicResource ResourceKey={x:Static Member=dance:DanceResourceKey.EDIT_HEIGHT_SMALL}}"
                                             Header="{Binding StandardTabHeader, RelativeSource={RelativeSource TemplatedParent}}"
                                             Foreground="{TemplateBinding TabForeground}">
                                        <Grid x:Name="_colorPaletteHost" Margin="4">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>

                                            <!-- Available Colors -->
                                            <Grid Grid.Row="1"
                                                  Visibility="{TemplateBinding ShowAvailableColors, Converter={StaticResource BooleanToVisibilityConverter}}">
                                                <Grid>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="Auto" />
                                                        <RowDefinition />
                                                    </Grid.RowDefinitions>
                                                    <TextBlock Text="{TemplateBinding AvailableColorsHeader}"
                                                               Background="{TemplateBinding HeaderBackground}"
                                                               Foreground="{TemplateBinding HeaderForeground}"
                                                               Padding="2"
                                                               Margin="0,0,0,1" >
                                                    </TextBlock>
                                                    <ListBox x:Name="PART_AvailableColors"
                                                             Grid.Row="1"
                                                             ItemsSource="{Binding AvailableColors, RelativeSource={RelativeSource TemplatedParent}}"
                                                             Style="{StaticResource ColorListStyle}" >
                                                    </ListBox>
                                                </Grid>
                                            </Grid>

                                            <!-- Standard Colors-->
                                            <Grid Grid.Row="2" Visibility="{TemplateBinding ShowStandardColors, Converter={StaticResource BooleanToVisibilityConverter}}">
                                                <Grid>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="Auto" />
                                                        <RowDefinition Height="Auto" />
                                                    </Grid.RowDefinitions>
                                                    <TextBlock Text="{TemplateBinding StandardColorsHeader}"
                                                               Background="{TemplateBinding HeaderBackground}"
                                                               Foreground="{TemplateBinding HeaderForeground}"
                                                               Padding="2"
                                                               Margin="0,1,0,1" >
                                                    </TextBlock>
                                                    <ListBox x:Name="PART_StandardColors"
                                                             Grid.Row="1"
                                                             ItemsSource="{Binding StandardColors, RelativeSource={RelativeSource TemplatedParent}}"
                                                             Style="{StaticResource ColorListStyle}" >
                                                    </ListBox>
                                                </Grid>
                                            </Grid>

                                            <!-- Recent Colors-->
                                            <Grid Grid.Row="3"
                                                  Margin="0,1,0,1"
                                                  Visibility="{TemplateBinding ShowRecentColors, Converter={StaticResource BooleanToVisibilityConverter}}">
                                                <Grid>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="Auto" />
                                                        <RowDefinition Height="22" />
                                                    </Grid.RowDefinitions>
                                                    <TextBlock Text="{TemplateBinding RecentColorsHeader}"
                                                               Background="{TemplateBinding HeaderBackground}"
                                                               Foreground="{TemplateBinding HeaderForeground}"
                                                               Padding="2"
                                                               Margin="0,1,0,1" >
                                                    </TextBlock>
                                                    <ListBox x:Name="PART_RecentColors"
                                                             Grid.Row="1"
                                                             ItemsSource="{Binding RecentColors, RelativeSource={RelativeSource TemplatedParent}}"
                                                             Style="{StaticResource ColorListStyle}" >
                                                    </ListBox>
                                                </Grid>
                                            </Grid>
                                        </Grid>
                                    </TabItem>
                                </TabControl>
                            </Border>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="DisplayColorAndName" Value="True">
                            <Setter TargetName="ColorOnly" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="ColorAndName" Property="Visibility" Value="Visible" />
                        </Trigger>

                        <Trigger Property="ShowTabHeaders" Value="False">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="StandardTabItem" />
                            <Setter Property="Visibility" Value="Collapsed" TargetName="AdvancedTabItem" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="{DynamicResource ResourceKey={x:Static Member=dance:DanceResourceKey.CONTROL_OPACITY_DISABLED}}"></Setter>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource ResourceKey={x:Static Member=dance:DanceResourceKey.BORDER_BRUSH_SELECTED}}"></Setter>
                        </Trigger>

                        <Trigger Property="IsOpen" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource ResourceKey={x:Static Member=dance:DanceResourceKey.BORDER_BRUSH_SELECTED}}"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>