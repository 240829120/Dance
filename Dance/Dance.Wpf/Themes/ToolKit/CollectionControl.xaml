<!--***********************************************************************************

   Toolkit for WPF

   Copyright (C) 2007-2022 Xceed Software Inc.

   This program is provided to you under the terms of the XCEED SOFTWARE, INC.
   COMMUNITY LICENSE AGREEMENT (for non-commercial use) as published at 
   https://github.com/xceedsoftware/wpftoolkit/blob/master/license.md 

   For more features, controls, and fast professional support,
   pick up the Plus Edition at https://xceed.com/xceed-toolkit-plus-for-wpf/

   Stay informed: follow @datagrid on Twitter or Like http://facebook.com/datagrids

  **********************************************************************************-->

<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="http://schemas.xceed.com/wpf/xaml/toolkit"
                    xmlns:conv="http://schemas.xceed.com/wpf/xaml/toolkit"
                    xmlns:colconv="http://schemas.xceed.com/wpf/xaml/toolkit"
                    xmlns:chrome="http://schemas.xceed.com/wpf/xaml/toolkit"
                    xmlns:pg="http://schemas.xceed.com/wpf/xaml/toolkit"
                    xmlns:dance="clr-namespace:Dance.Wpf">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Dance.Wpf;component/Themes/Styles/Button.xaml"></ResourceDictionary>
        <ResourceDictionary Source="/Dance.Wpf;component/Themes/Styles/ListBox.xaml"></ResourceDictionary>
        <ResourceDictionary Source="./Glyphs.xaml" />
        <ResourceDictionary Source="./MultiLineTextEditor.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <conv:InverseBoolConverter x:Key="InverseBoolConverter" />
    <conv:ObjectTypeToNameConverter x:Key="ObjectTypeToNameConverter" />
    <colconv:NewItemTypesComboBoxConverter x:Key="NewItemTypesComboBoxConverter" />

    <!-- 弹出对话框 -->
    <Style TargetType="local:CollectionControlDialog">
        <Setter Property="WindowStyle" Value="None"></Setter>
        <Setter Property="AllowsTransparency" Value="True"></Setter>
        <Setter Property="dance:DanceWindowTrigger.SetWidth" Value="1000"></Setter>
        <Setter Property="dance:DanceWindowTrigger.SetHeight" Value="800"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:CollectionControlDialog">
                    <Grid>
                        <Border Background="White" Margin="10">
                            <Border.Effect>
                                <DropShadowEffect Color="Black" Direction="-20" ShadowDepth="5" BlurRadius="10" Opacity="0.3"></DropShadowEffect>
                            </Border.Effect>
                        </Border>
                        <Border Margin="10" BorderThickness="{DynamicResource ResourceKey={x:Static Member=dance:DanceResourceKey.BORDER_THICKNESS}}"
                                BorderBrush="{DynamicResource ResourceKey={x:Static Member=dance:DanceResourceKey.BORDER_BRUSH}}">
                            <dance:DanceWindowResizeContainerPart Margin="-5">
                                <Grid Background="White" Grid.Row="1" Grid.Column="1">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="30"></RowDefinition>
                                        <RowDefinition Height="*"></RowDefinition>
                                        <RowDefinition Height="20"></RowDefinition>
                                    </Grid.RowDefinitions>
                                    <!-- 标题 -->
                                    <Grid Background="#FFFAFAFA">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"></ColumnDefinition>
                                            <ColumnDefinition Width="120"></ColumnDefinition>
                                        </Grid.ColumnDefinitions>
                                        <dance:DanceWindowDragPart Grid.ColumnSpan="2"></dance:DanceWindowDragPart>
                                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="10,0,0,0">
                                            <Image Width="20" Height="20" Source="/Dance.Art.Module;component/Themes/Resources/Icons/logo.png" VerticalAlignment="Center"></Image>
                                            <TextBlock Text="列表" VerticalAlignment="Center" Margin="10,0,0,0"></TextBlock>
                                        </StackPanel>
                                        <Grid Grid.Column="1">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"></ColumnDefinition>
                                                <ColumnDefinition Width="*"></ColumnDefinition>
                                                <ColumnDefinition Width="*"></ColumnDefinition>
                                            </Grid.ColumnDefinitions>
                                            <dance:DanceWindowMinPart HorizontalAlignment="Right"></dance:DanceWindowMinPart>
                                            <dance:DanceWindowMaxOrNormalPart HorizontalAlignment="Right" Grid.Column="1"></dance:DanceWindowMaxOrNormalPart>
                                            <dance:DanceWindowClosePart HorizontalAlignment="Right" Grid.Column="2"></dance:DanceWindowClosePart>
                                        </Grid>
                                    </Grid>
                                    <!-- 内容 -->
                                    <ContentPresenter Grid.Row="1" Margin="10,10,20,10"></ContentPresenter>
                                    <!-- 覆盖按钮 -->
                                    <Border Background="{DynamicResource ResourceKey={x:Static Member=dance:DanceResourceKey.BACKGROUND_BRUSH}}"
                                            Grid.Row="1" Grid.RowSpan="2" VerticalAlignment="Bottom" HorizontalAlignment="Right" Height="70" Width="380">
                                        <StackPanel Orientation="Horizontal" Margin="0,0,20,10" HorizontalAlignment="Right" VerticalAlignment="Center">
                                            <Button Style="{StaticResource Button_Master}" Content="确定" Margin="10"
                                                    dance:DanceButtonTrigger.CallPrivateFunctionTarget="{Binding .,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CollectionControlDialog}}"
                                                    dance:DanceButtonTrigger.CallPrivateFunction="OkButton_Click"></Button>
                                            <Button Style="{StaticResource Button_Secondary}" Content="取消" Grid.Column="1" Margin="10"
                                                    dance:DanceButtonTrigger.CallPrivateFunctionTarget="{Binding .,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:CollectionControlDialog}}"
                                                    dance:DanceButtonTrigger.CallPrivateFunction="CancelButton_Click"></Button>
                                        </StackPanel>
                                    </Border>

                                </Grid>
                            </dance:DanceWindowResizeContainerPart>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- 列表编辑控件 -->
    <Style TargetType="{x:Type local:CollectionControl}">
        <Setter Property="Background" Value="{DynamicResource ResourceKey={x:Static Member=dance:DanceResourceKey.BACKGROUND_BRUSH}}"></Setter>
        <Setter Property="TypeSelectionLabel" Value="选择类型"></Setter>
        <Setter Property="PropertiesLabel" Value="属性"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:CollectionControl}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid Margin="{TemplateBinding Padding}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="1.5*" />
                            </Grid.ColumnDefinitions>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <ContentControl Margin="0,0,0,5" Content="{TemplateBinding TypeSelectionLabel}">
                                </ContentControl>
                                <ComboBox x:Name="PART_NewItemTypesComboBox"
                                          Grid.Row="1"
                                          Margin="0,0,0,3"
                                          HorizontalAlignment="Stretch">
                                    <ComboBox.ItemsSource>
                                        <MultiBinding Converter="{StaticResource NewItemTypesComboBoxConverter}">
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="ItemsSourceType" />
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="NewItemTypes" />
                                        </MultiBinding>
                                    </ComboBox.ItemsSource>
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Converter={StaticResource ObjectTypeToNameConverter}}" />
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                                <Button Margin="3,0,0,3"
                                        Grid.Row="1"
                                        Grid.Column="1"
                                        Content="添加"
                                        Width="80"
                                        Command="New" Style="{StaticResource Button_Master}"
                                        CommandParameter="{Binding SelectedItem, ElementName=PART_NewItemTypesComboBox}" >
                                </Button>
                                <ListBox x:Name="PART_ListBox" Style="{StaticResource ListBox}"
                                         Grid.Row="2"
                                         Grid.ColumnSpan="2"
                                         ItemsSource="{Binding Items, RelativeSource={RelativeSource TemplatedParent}}"
                                         SelectedItem="{Binding SelectedItem, RelativeSource={RelativeSource TemplatedParent}}"
                                         SelectedIndex="0">
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Converter={StaticResource ObjectTypeToNameConverter}}" />
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>
                                <StackPanel Margin="7,2,0,0"
                                            VerticalAlignment="Top"
                                            Grid.Column="2"
                                            Grid.Row="2">
                                    <Button Style="{StaticResource Button_Secondary}"
                                            Width="{DynamicResource ResourceKey={x:Static Member=dance:DanceResourceKey.EDIT_HEIGHT}}"
                                            Height="{DynamicResource ResourceKey={x:Static Member=dance:DanceResourceKey.EDIT_HEIGHT}}"
                                            Command="ComponentCommands.MoveUp"
                                            CommandParameter="{Binding SelectedItem, ElementName=PART_ListBox}">
                                        <dance:DanceSvgImage Width="14" Height="14" HorizontalAlignment="Center" VerticalAlignment="Center"
                                                             Source="pack://application:,,,/Dance.Wpf;component/Themes/ToolKit/Icons/move_up.svg"></dance:DanceSvgImage>
                                    </Button>
                                    <Button Margin="0,10,0,0"
                                            Style="{StaticResource Button_Secondary}"
                                            Width="{DynamicResource ResourceKey={x:Static Member=dance:DanceResourceKey.EDIT_HEIGHT}}"
                                            Height="{DynamicResource ResourceKey={x:Static Member=dance:DanceResourceKey.EDIT_HEIGHT}}"
                                            Command="ComponentCommands.MoveDown"
                                            CommandParameter="{Binding SelectedItem, ElementName=PART_ListBox}">
                                        <dance:DanceSvgImage Width="14" Height="14" HorizontalAlignment="Center" VerticalAlignment="Center"
                                                             Source="pack://application:,,,/Dance.Wpf;component/Themes/ToolKit/Icons/move_down.svg"></dance:DanceSvgImage>
                                    </Button>
                                    <Button Margin="0,10,0,0"
                                            Style="{StaticResource Button_Secondary}"
                                            Width="{DynamicResource ResourceKey={x:Static Member=dance:DanceResourceKey.EDIT_HEIGHT}}"
                                            Height="{DynamicResource ResourceKey={x:Static Member=dance:DanceResourceKey.EDIT_HEIGHT}}"
                                            Command="Delete"
                                            CommandParameter="{Binding SelectedItem, ElementName=PART_ListBox}">
                                        <dance:DanceSvgImage Width="14" Height="14" HorizontalAlignment="Center" VerticalAlignment="Center"
                                                             Source="pack://application:,,,/Dance.Wpf;component/Themes/ToolKit/Icons/delete.svg"></dance:DanceSvgImage>
                                    </Button>
                                    <Button Margin="0,10,0,0"
                                            Style="{StaticResource Button_Secondary}"
                                            Width="{DynamicResource ResourceKey={x:Static Member=dance:DanceResourceKey.EDIT_HEIGHT}}"
                                            Height="{DynamicResource ResourceKey={x:Static Member=dance:DanceResourceKey.EDIT_HEIGHT}}"
                                            Command="Copy"
                                            CommandParameter="{Binding SelectedItem, ElementName=PART_ListBox}">
                                        <dance:DanceSvgImage Width="14" Height="14" HorizontalAlignment="Center" VerticalAlignment="Center"
                                                             Source="pack://application:,,,/Dance.Wpf;component/Themes/ToolKit/Icons/copy.svg"></dance:DanceSvgImage>
                                    </Button>
                                </StackPanel>
                            </Grid>
                            <Grid Column="1" Margin="20,0,0,0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <ContentControl Grid.Column="1" Content="{TemplateBinding PropertiesLabel}">
                                </ContentControl>
                                <pg:PropertyGrid x:Name="PART_PropertyGrid"
                                                 Grid.Row="1"
                                                 Grid.Column="1"
                                                 Margin="0,5,0,0"
                                                 HorizontalAlignment="Stretch"
                                                 VerticalAlignment="Stretch"
                                                 SelectedObject="{Binding SelectedItem, RelativeSource={RelativeSource TemplatedParent}}"
                                                 IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"
                                                 EditorDefinitions="{Binding EditorDefinitions, RelativeSource={RelativeSource TemplatedParent}}"/>
                            </Grid>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" TargetName="PART_NewItemTypesComboBox" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- 私有类型列表控件 -->
    <Style x:Key="PrimitiveTypeCollectionControl" TargetType="{x:Type local:PrimitiveTypeCollectionControl}">
        <Setter Property="Background" Value="{DynamicResource ResourceKey={x:Static Member=dance:DanceResourceKey.BACKGROUND_BRUSH}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ResourceKey={x:Static Member=dance:DanceResourceKey.BORDER_BRUSH}}"></Setter>
        <Setter Property="BorderThickness" Value="{DynamicResource ResourceKey={x:Static Member=dance:DanceResourceKey.BORDER_THICKNESS}}" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Padding" Value="3" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:PrimitiveTypeCollectionControl}">
                    <local:MultiLineTextEditor Background="{TemplateBinding Background}"
                                               BorderBrush="{TemplateBinding BorderBrush}"
                                               BorderThickness="{TemplateBinding BorderThickness}"
                                               Content="{TemplateBinding Content}"
                                               ContentTemplate="{TemplateBinding ContentTemplate}"
                                               Padding="{TemplateBinding Padding}"
                                               HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                               IsOpen="{TemplateBinding IsOpen}"
                                               IsReadOnly="{TemplateBinding IsReadOnly}"
                                               Text="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}"
                                               VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                               DropDownWidth="{TemplateBinding ActualWidth}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource ResourceKey={x:Static Member=dance:DanceResourceKey.BORDER_BRUSH_SELECTED}}"></Setter>
            </Trigger>
            <Trigger Property="IsOpen" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource ResourceKey={x:Static Member=dance:DanceResourceKey.BORDER_BRUSH_SELECTED}}"></Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="{DynamicResource ResourceKey={x:Static Member=dance:DanceResourceKey.CONTROL_OPACITY_DISABLED}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type local:PrimitiveTypeCollectionControl}"
           BasedOn="{StaticResource PrimitiveTypeCollectionControl}" />

    <!-- 列表编辑按钮 -->
    <Style x:Key="CollectionControlButton" TargetType="{x:Type local:CollectionControlButton}">
        <Setter Property="Background" Value="{DynamicResource ResourceKey={x:Static Member=dance:DanceResourceKey.BACKGROUND_BRUSH}}" />
        <Setter Property="BorderBrush" Value="Transparent"></Setter>
        <Setter Property="BorderThickness" Value="{DynamicResource ResourceKey={x:Static Member=dance:DanceResourceKey.BORDER_THICKNESS}}" />
        <Setter Property="Padding" Value="3" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Content" Value="{}{集合}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="MinHeight" Value="{DynamicResource ResourceKey={x:Static Member=dance:DanceResourceKey.EDIT_HEIGHT_SMALL}}" />
        <Setter Property="IsTabStop" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="True" UseLayoutRounding="True">
                        <Grid SnapsToDevicePixels="True" UseLayoutRounding="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <ContentPresenter Content="{TemplateBinding Content}"
                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                  ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />

                            <Border Grid.Column="1" Width="20">
                                <Path Width="9"
                                      Height="5"
                                      Data="{StaticResource DownArrowGeometry}"
                                      Fill="#BABABA"
                                      VerticalAlignment="Center" HorizontalAlignment="Center" />
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource ResourceKey={x:Static Member=dance:DanceResourceKey.BORDER_BRUSH_SELECTED}}"></Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="{DynamicResource ResourceKey={x:Static Member=dance:DanceResourceKey.CONTROL_OPACITY_DISABLED}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:CollectionControlButton}"
           BasedOn="{StaticResource CollectionControlButton}" />

</ResourceDictionary>