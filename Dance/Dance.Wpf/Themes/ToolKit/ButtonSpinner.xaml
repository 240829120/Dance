<!--***********************************************************************************

   Toolkit for WPF

   Copyright (C) 2007-2022 Xceed Software Inc.

   This program is provided to you under the terms of the XCEED SOFTWARE, INC.
   COMMUNITY LICENSE AGREEMENT (for non-commercial use) as published at 
   https://github.com/xceedsoftware/wpftoolkit/blob/master/license.md 

   For more features, controls, and fast professional support,
   pick up the Plus Edition at https://xceed.com/xceed-toolkit-plus-for-wpf/

   Stay informed: follow @datagrid on Twitter or Like http://facebook.com/datagrids

  **********************************************************************************-->

<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="http://schemas.xceed.com/wpf/xaml/toolkit"
                    xmlns:themes="http://schemas.xceed.com/wpf/xaml/toolkit"
                    xmlns:dance="clr-namespace:Dance.Wpf">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="./Glyphs.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!-- =============================================================================== -->
    <!-- ButtonSpinner                                                                   -->
    <!-- =============================================================================== -->

    <Style x:Key="SpinnerButtonStyleKey" TargetType="RepeatButton">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"></ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ResourceKey={x:Static Member=dance:DanceResourceKey.BACKGROUND_BRUSH_MOUSE_OVER}}"></Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource ResourceKey={x:Static Member=dance:DanceResourceKey.BACKGROUND_BRUSH_PRESSED}}"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

    <Style TargetType="{x:Type local:ButtonSpinner}">
        <Setter Property="Background" Value="{DynamicResource {x:Static Member=dance:DanceResourceKey.BACKGROUND_BRUSH}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static Member=dance:DanceResourceKey.BORDER_BRUSH}}" />
        <Setter Property="BorderThickness" Value="{DynamicResource {x:Static Member=dance:DanceResourceKey.BORDER_THICKNESS}}" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="IsTabStop" Value="True" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="SpinnerUpContentTemplate" Value="{StaticResource IncreaseGlyphNormalKey}" />
        <Setter Property="SpinnerDownContentTemplate" Value="{StaticResource DecreaseGlyphNormalKey}" />
        <Setter Property="SpinnerUpDisabledContentTemplate" Value="{StaticResource IncreaseGlyphDisabledKey}" />
        <Setter Property="SpinnerDownDisabledContentTemplate" Value="{StaticResource DecreaseGlyphDisabledKey}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ButtonSpinner}">
                    <Border x:Name="Border"
                            SnapsToDevicePixels="True"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="firstContentColumn" Width="*" />
                                <ColumnDefinition x:Name="secondContentColumn" Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <ContentPresenter x:Name="contentPresenter"
                                              Focusable="False"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />

                            <Grid x:Name="gridContent"
                                  Grid.Column="1"
                                  Width="{TemplateBinding SpinnerWidth}"
                                  Height="{TemplateBinding SpinnerHeight}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>

                                <RepeatButton x:Name="PART_IncreaseButton"
                                              Style="{StaticResource  ResourceKey=SpinnerButtonStyleKey}"
                                              IsTabStop="{TemplateBinding IsTabStop}"
                                              ContentTemplate="{TemplateBinding SpinnerUpContentTemplate}">
                                </RepeatButton>

                                <RepeatButton x:Name="PART_DecreaseButton"
                                              Grid.Row="1"
                                              Style="{StaticResource  ResourceKey=SpinnerButtonStyleKey}"
                                              IsTabStop="{TemplateBinding IsTabStop}"
                                              ContentTemplate="{TemplateBinding SpinnerDownContentTemplate}" >
                                </RepeatButton>

                            </Grid>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ShowButtonSpinner" Value="False">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="gridContent" />
                        </Trigger>
                        <Trigger Property="ShowSpinner" Value="False">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="gridContent" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="{DynamicResource {x:Static Member=dance:DanceResourceKey.CONTROL_OPACITY_DISABLED}}" />
                        </Trigger>
                        <Trigger SourceName="PART_IncreaseButton" Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_IncreaseButton" Property="ContentTemplate" 
                                    Value="{Binding SpinnerUpDisabledContentTemplate, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                        <Trigger SourceName="PART_DecreaseButton" Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_DecreaseButton" Property="ContentTemplate"
                                    Value="{Binding SpinnerDownDisabledContentTemplate, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="SpinnerLocation" Value="Left">
                            <Setter TargetName="firstContentColumn" Property="Width" Value="Auto" />
                            <Setter TargetName="secondContentColumn" Property="Width" Value="*" />
                            <Setter TargetName="contentPresenter" Property="Grid.Column" Value="1" />
                            <Setter TargetName="gridContent" Property="Grid.Column" Value="0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>