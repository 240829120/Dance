<!--***********************************************************************************

   Toolkit for WPF

   Copyright (C) 2007-2022 Xceed Software Inc.

   This program is provided to you under the terms of the XCEED SOFTWARE, INC.
   COMMUNITY LICENSE AGREEMENT (for non-commercial use) as published at 
   https://github.com/xceedsoftware/wpftoolkit/blob/master/license.md 

   For more features, controls, and fast professional support,
   pick up the Plus Edition at https://xceed.com/xceed-toolkit-plus-for-wpf/

   Stay informed: follow @datagrid on Twitter or Like http://facebook.com/datagrids

  **********************************************************************************-->

<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="http://schemas.xceed.com/wpf/xaml/toolkit"
                    xmlns:chrome="http://schemas.xceed.com/wpf/xaml/toolkit"
                    xmlns:conv="http://schemas.xceed.com/wpf/xaml/toolkit"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:dance="clr-namespace:Dance.Wpf">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="./Glyphs.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <conv:InverseBoolConverter x:Key="InverseBoolConverter" />

    <TextBlock x:Key="DefaultContent"
               Text="{Binding Text, RelativeSource={RelativeSource AncestorType={x:Type local:MultiLineTextEditor}}}"
               TextWrapping="Wrap"
               TextTrimming="CharacterEllipsis" />

    <Style x:Key="ToggleButtonStyle" TargetType="ToggleButton">
        <Setter Property="BorderBrush" Value="Transparent"></Setter>
        <Setter Property="Height" Value="{DynamicResource ResourceKey={x:Static Member=dance:DanceResourceKey.EDIT_HEIGHT_SMALL}}"></Setter>
        <Setter Property="BorderThickness" Value="{DynamicResource ResourceKey={x:Static Member=dance:DanceResourceKey.BORDER_THICKNESS}}"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="True">
                        <Grid UseLayoutRounding="True" SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <ContentPresenter Content="{TemplateBinding Content}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                              ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />

                            <Border Grid.Column="1" Width="20">
                                <Path Width="9"
                                      Height="5"
                                      Data="{StaticResource DownArrowGeometry}"
                                      Fill="#BABABA"
                                      VerticalAlignment="Center" HorizontalAlignment="Center" />
                            </Border>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource ResourceKey={x:Static Member=dance:DanceResourceKey.BORDER_BRUSH_SELECTED}}"></Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="{DynamicResource ResourceKey={x:Static Member=dance:DanceResourceKey.CONTROL_OPACITY_DISABLED}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:MultiLineTextEditor}">
        <Setter Property="Background" Value="{DynamicResource ResourceKey={x:Static Member=dance:DanceResourceKey.BACKGROUND_BRUSH}}" />
        <Setter Property="BorderBrush" Value="Red"></Setter>
        <Setter Property="BorderThickness" Value="{DynamicResource ResourceKey={x:Static Member=dance:DanceResourceKey.BORDER_THICKNESS}}"></Setter>
        <Setter Property="Content" Value="{StaticResource DefaultContent}" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Height" Value="{DynamicResource ResourceKey={x:Static Member=dance:DanceResourceKey.EDIT_HEIGHT_SMALL}}"></Setter>
        <Setter Property="Padding" Value="3" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:MultiLineTextEditor}">
                    <Grid x:Name="Root">
                        <ToggleButton x:Name="PART_DropDownButton"
                                      Grid.Column="1"
                                      IsTabStop="True"
                                      SnapsToDevicePixels="True"
                                      Background="{TemplateBinding Background}"
                                      BorderBrush="{TemplateBinding BorderBrush}"
                                      BorderThickness="{TemplateBinding BorderThickness}"
                                      Padding="{TemplateBinding Padding}"
                                      Content="{TemplateBinding Content}"
                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                      ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                      ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                      IsChecked="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                      Style="{StaticResource ToggleButtonStyle}"
                                      IsHitTestVisible="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InverseBoolConverter}}"
                                      VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                      HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}">
                        </ToggleButton>
                        <Popup IsOpen="{Binding IsChecked, ElementName=PART_DropDownButton}"
                               StaysOpen="False"
                               Placement="Bottom"
                               SnapsToDevicePixels="True"
                               AllowsTransparency="True"
                               Focusable="False"
                               PopupAnimation="Fade"
                               Width="{TemplateBinding DropDownWidth}"
                               Height="{TemplateBinding DropDownHeight}"
                               ToolTip="{x:Static sys:String.Empty}">
                            <Border BorderThickness="1"
                                    Background="{DynamicResource ResourceKey={x:Static Member=dance:DanceResourceKey.BACKGROUND_BRUSH}}"
                                    BorderBrush="{DynamicResource ResourceKey={x:Static Member=dance:DanceResourceKey.BORDER_BRUSH}}">
                                <Grid>
                                    <TextBox x:Name="PART_TextBox"
                                             AcceptsReturn="true" BorderBrush="Transparent"
                                             TextWrapping="{TemplateBinding TextWrapping}"
                                             Padding="{TemplateBinding Padding}"
                                             VerticalScrollBarVisibility="Auto" Height="NaN"
                                             HorizontalScrollBarVisibility="Auto"
                                             VerticalContentAlignment="Top"
                                             SpellCheck.IsEnabled="{TemplateBinding IsSpellCheckEnabled}"
                                             IsReadOnly="{TemplateBinding IsReadOnly}"
                                             Text="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}"
                                             TextAlignment="{TemplateBinding TextAlignment}"
                                             Margin="0,0,0,10" >
                                    </TextBox>
                                    <Thumb x:Name="PART_ResizeThumb"
                                           HorizontalAlignment="Right"
                                           VerticalAlignment="Bottom"
                                           Cursor="SizeNWSE">
                                        <Thumb.Template>
                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                <Grid Background="Transparent">
                                                    <Path Data="M0.5,6.5 L6.5,0.5 M6.5,3.5 L3.5,6.5"
                                                          Stroke="#707070"
                                                          StrokeThickness="1" />
                                                </Grid>
                                            </ControlTemplate>
                                        </Thumb.Template>
                                    </Thumb>
                                </Grid>
                            </Border>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource ResourceKey={x:Static Member=dance:DanceResourceKey.BORDER_BRUSH_SELECTED}}"></Setter>
            </Trigger>
            <Trigger Property="IsOpen" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource ResourceKey={x:Static Member=dance:DanceResourceKey.BORDER_BRUSH_SELECTED}}"></Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="{DynamicResource ResourceKey={x:Static Member=dance:DanceResourceKey.CONTROL_OPACITY_DISABLED}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>