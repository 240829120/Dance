<!--***********************************************************************************

   Toolkit for WPF

   Copyright (C) 2007-2022 Xceed Software Inc.

   This program is provided to you under the terms of the XCEED SOFTWARE, INC.
   COMMUNITY LICENSE AGREEMENT (for non-commercial use) as published at 
   https://github.com/xceedsoftware/wpftoolkit/blob/master/license.md 

   For more features, controls, and fast professional support,
   pick up the Plus Edition at https://xceed.com/xceed-toolkit-plus-for-wpf/

   Stay informed: follow @datagrid on Twitter or Like http://facebook.com/datagrids

  **********************************************************************************-->

<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:themes="http://schemas.xceed.com/wpf/xaml/toolkit"
                    xmlns:local="http://schemas.xceed.com/wpf/xaml/toolkit"
                    xmlns:dance="clr-namespace:Dance.Wpf">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="./Glyphs.xaml" />
        <ResourceDictionary Source="./ButtonSpinner.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <DataTemplate x:Key="DefaultWatermarkTemplate">
        <ContentControl Content="{Binding}" 
                        Foreground="{DynamicResource ResourceKey={x:Static Member=dance:DanceResourceKey.FOREGROUND_BRUSH}}" 
                        Opacity="{DynamicResource ResourceKey={x:Static Member=dance:DanceResourceKey.CONTROL_OPACITY_DISABLED}}"
                        Focusable="False" />
    </DataTemplate>

    <!-- =============================================================================== -->
    <!-- DateTimeUpDown                                                                  -->
    <!-- =============================================================================== -->

    <Style x:Key="DateTimeUpDown" TargetType="{x:Type local:DateTimeUpDown}">
        <Setter Property="Background" Value="{DynamicResource {x:Static Member=dance:DanceResourceKey.BACKGROUND_BRUSH}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static Member=dance:DanceResourceKey.BORDER_BRUSH}}" />
        <Setter Property="BorderThickness" Value="{DynamicResource {x:Static Member=dance:DanceResourceKey.BORDER_THICKNESS}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static Member=dance:DanceResourceKey.FOREGROUND_BRUSH}}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="TextAlignment" Value="Left" />
        <Setter Property="Height" Value="{DynamicResource ResourceKey={x:Static Member=dance:DanceResourceKey.EDIT_HEIGHT_SMALL}}"></Setter>
        <Setter Property="WatermarkTemplate" Value="{StaticResource DefaultWatermarkTemplate}" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="ButtonSpinnerUpContentTemplate" Value="{StaticResource IncreaseGlyphNormalKey}" />
        <Setter Property="ButtonSpinnerDownContentTemplate" Value="{StaticResource DecreaseGlyphNormalKey}" />
        <Setter Property="ButtonSpinnerUpDisabledContentTemplate" Value="{StaticResource IncreaseGlyphDisabledKey}" />
        <Setter Property="ButtonSpinnerDownDisabledContentTemplate" Value="{StaticResource DecreaseGlyphDisabledKey}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:DateTimeUpDown}">
                    <local:ButtonSpinner x:Name="PART_Spinner"
                                         IsTabStop="False"
                                         Background="{TemplateBinding Background}"
                                         BorderBrush="{TemplateBinding BorderBrush}"
                                         BorderThickness="{TemplateBinding BorderThickness}"
                                         HorizontalContentAlignment="Stretch"
                                         VerticalContentAlignment="Stretch"
                                         SpinnerLocation="{TemplateBinding ButtonSpinnerLocation}"
                                         SpinnerWidth="{TemplateBinding ButtonSpinnerWidth}"
                                         SpinnerHeight="{TemplateBinding ButtonSpinnerHeight}"
                                         SpinnerUpContentTemplate="{TemplateBinding ButtonSpinnerUpContentTemplate}"
                                         SpinnerDownContentTemplate="{TemplateBinding ButtonSpinnerDownContentTemplate}"
                                         SpinnerUpDisabledContentTemplate="{TemplateBinding ButtonSpinnerUpDisabledContentTemplate}"
                                         SpinnerDownDisabledContentTemplate="{TemplateBinding ButtonSpinnerDownDisabledContentTemplate}"
                                         AllowSpin="{TemplateBinding AllowSpin}"
                                         ShowSpinner="{TemplateBinding ShowButtonSpinner}">
                        <local:WatermarkTextBox x:Name="PART_TextBox"
                                                BorderThickness="0"
                                                Background="Transparent"
                                                ContextMenu="{TemplateBinding ContextMenu}"
                                                FontFamily="{TemplateBinding FontFamily}"
                                                FontSize="{TemplateBinding FontSize}"
                                                FontStretch="{TemplateBinding FontStretch}"
                                                FontStyle="{TemplateBinding FontStyle}"
                                                FontWeight="{TemplateBinding FontWeight}"
                                                Foreground="{TemplateBinding Foreground}"
                                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                IsUndoEnabled="{Binding IsUndoEnabled, RelativeSource={RelativeSource TemplatedParent}}"
                                                IsTabStop="True"
                                                AutoSelectBehavior="OnFocus"
                                                MinWidth="20" Height="22"
                                                AcceptsReturn="False"
                                                Padding="{TemplateBinding Padding}"
                                                TextAlignment="{TemplateBinding TextAlignment}"
                                                TextWrapping="NoWrap"
                                                TabIndex="{TemplateBinding TabIndex}"
                                                Text="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}"
                                                Watermark="{TemplateBinding Watermark}"
                                                WatermarkTemplate="{TemplateBinding WatermarkTemplate}" />
                    </local:ButtonSpinner>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="PART_TextBox" Property="FocusManager.FocusedElement" Value="{Binding ElementName=PART_TextBox}" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsReadOnly, RelativeSource={RelativeSource Self}}" Value="False" />
                                <Condition Binding="{Binding AllowTextInput, RelativeSource={RelativeSource Self}}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="IsReadOnly" Value="True" TargetName="PART_TextBox" />
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding IsReadOnly, RelativeSource={RelativeSource Self}}" Value="True">
                            <Setter Property="IsReadOnly" Value="True" TargetName="PART_TextBox" />
                        </DataTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static Member=dance:DanceResourceKey.BORDER_BRUSH_SELECTED}}"></Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="{DynamicResource {x:Static Member=dance:DanceResourceKey.CONTROL_OPACITY_DISABLED}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:DateTimeUpDown}"
           BasedOn="{StaticResource DateTimeUpDown}" />

</ResourceDictionary>